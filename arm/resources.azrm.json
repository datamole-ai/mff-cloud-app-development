{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": { "type": "string" },
        "transportsTableName": { "type": "string" },
        "appInsightsName": { "type": "string" },
        "functionAppName": { "type": "string" },
        "cachedReportsContainerName": { "type": "string" },
        "eventHubNamespaceName": { "type": "string" }
    },
    "variables": {
        "storageAccountTableService": "[concat(parameters('storageAccountName'), '/' ,'default')]",
        "storageAccountTableServiceTransport": "[concat(parameters('storageAccountName'), '/' ,'default','/', parameters('transportsTableName'))]",
        "clientEventsEventHubName": "client-events",
        "clientEventsSenderAuthorizationRule": "client-events-sender",
        "clientEventsListenerAuthorizationRule": "client-events-listener"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "name": "[parameters('eventHubNamespaceName')]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {},
            "resources": [
                {
                    "type": "eventhubs",
                    "name": "[variables('clientEventsEventHubName')]",
                    "apiVersion": "2017-04-01",
                    "dependsOn": [
                        "[parameters('eventHubNamespaceName')]"
                    ],
                    "properties": {},
                    "resources": [
                        {
                            "type": "authorizationRules",
                            "name": "[variables('clientEventsSenderAuthorizationRule')]",
                            "apiVersion": "2017-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNamespaceName'), variables('clientEventsEventHubName'))]"
                            ],
                            "properties": {
                                "rights": [
                                    "Send"
                                ]
                            }
                        },
                        {
                            "type": "authorizationRules",
                            "name": "[variables('clientEventsListenerAuthorizationRule')]",
                            "apiVersion": "2017-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNamespaceName'), variables('clientEventsEventHubName'))]"
                            ],
                            "properties": {
                                "rights": [
                                    "Listen"
                                ]
                            }
                        },
                        {
                            "type": "consumerGroups",
                            "name": "client-events-processing-consumer-group",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNamespaceName'), variables('clientEventsEventHubName'))]"
                            ],
                            "apiVersion": "2017-04-01",
                            "properties": {}
                        },
                        {
                            "type": "consumerGroups",
                            "name": "client-events-anomaly-detection-consumer-group",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('eventHubNamespaceName'), variables('clientEventsEventHubName'))]"
                            ],
                            "apiVersion": "2017-04-01",
                            "properties": {}
                        }
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "kind": "StorageV2",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot",
                "isHnsEnabled": false,
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2"
            },
            "resources": [
                {
                    "name": "[variables('storageAccountTableService')]",
                    "type": "Microsoft.Storage/storageAccounts/tableServices",
                    "apiVersion": "2019-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                    ],
                    "properties": {

                    },
                    "resources": [
                        {
                            "name": "[variables('storageAccountTableServiceTransport')]",
                            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
                            "apiVersion": "2019-06-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccountName') , 'default')]"
                            ]
                        }
                    ]
                },
                {
                    "type": "blobServices/containers",
                    "name": "[concat('default/',parameters('cachedReportsContainerName'))]",
                    "apiVersion": "2019-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-05-01",
            "name": "[parameters('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "kind": "web",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[parameters('appInsightsName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
            ],
            "properties": {
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', parameters('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "StorageAccountConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "clientEventsListenerEventHubConnectionString",
                            "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventHubNamespaceName'), variables('clientEventsEventHubName'), variables('clientEventsListenerAuthorizationRule')), '2017-04-01').primaryConnectionString]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "StorageAccountConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]"
        },
        "clientEventsListenerEventHubConnectionString": {
            "type": "string",
            "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventHubNamespaceName'), variables('clientEventsEventHubName'), variables('clientEventsListenerAuthorizationRule')), '2017-04-01').primaryConnectionString]"
        },
        "clientEventsSenderEventHubConnectionString": {
            "type": "string",
            "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('eventHubNamespaceName'), variables('clientEventsEventHubName'), variables('clientEventsSenderAuthorizationRule')), '2017-04-01').primaryConnectionString]"
        }
    }
}
