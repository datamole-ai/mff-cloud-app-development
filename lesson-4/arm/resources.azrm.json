{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "suffix": {"type": "string"},
        "otelProtocol": {"type": "string"},
        "otelEndpoint": {"type": "string"},
        "otelHeaders": {"type": "securestring"}
    },
    "variables": {
        "transportsTableName": "transports",
        "statisticsTableName": "statisticsCache",
        "appServicePlanName": "mffiotasp",
        "webAppName": "[concat('mff-iot-webapp-', parameters('suffix'))]",
        "functionAppName": "[concat('mff-iot-fa-', parameters('suffix'))]",
        "appInsightsName": "[concat('mff-iot-ai-', parameters('suffix'))]",
        "storageAccountName": "[concat('mffiot', parameters('suffix'))]",
        "eventHubNamespaceName": "[concat('mff-iot-ehns-', parameters('suffix'))]",
        "eventHubName": "transports",
        "eventsSenderAuthorizationRule": "sender",
        "eventsListenerAuthorizationRule": "listener"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "name": "[variables('eventHubNamespaceName')]",
            "apiVersion": "2017-04-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {},
            "resources": [
                {
                    "type": "eventhubs",
                    "name": "[variables('eventHubName')]",
                    "apiVersion": "2017-04-01",
                    "dependsOn": [
                        "[variables('eventHubNamespaceName')]"
                    ],
                    "properties": {},
                    "resources": [
                        {
                            "type": "authorizationRules",
                            "name": "[variables('eventsSenderAuthorizationRule')]",
                            "apiVersion": "2017-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]"
                            ],
                            "properties": {
                                "rights": [
                                    "Send"
                                ]
                            }
                        },
                        {
                            "type": "authorizationRules",
                            "name": "[variables('eventsListenerAuthorizationRule')]",
                            "apiVersion": "2017-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]"
                            ],
                            "properties": {
                                "rights": [
                                    "Listen"
                                ]
                            }
                        },
                        {
                            "type": "consumerGroups",
                            "name": "processing-consumer-group",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]"
                            ],
                            "apiVersion": "2017-04-01",
                            "properties": {}
                        },
                        {
                            "type": "consumerGroups",
                            "name": "anomaly-detection-consumer-group",
                            "dependsOn": [
                                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventHubNamespaceName'), variables('eventHubName'))]"
                            ],
                            "apiVersion": "2017-04-01",
                            "properties": {}
                        }
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[variables('storageAccountName')]",
            "kind": "StorageV2",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot",
                "isHnsEnabled": false,
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2"
            },
            "resources": [
                {
                    "type": "tableServices/tables",
                    "apiVersion": "2022-05-01",
                    "name": "[concat('default/', variables('transportsTableName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ]
                },
                {
                    "type": "tableServices/tables",
                    "apiVersion": "2022-05-01",
                    "name": "[concat('default/', variables('statisticsTableName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ]
                }
                
            ]
        },
        {
            "apiVersion": "2015-05-01",
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "kind": "web",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('appInsightsName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ],
            "properties": {
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet-isolated"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                        },
                        {
                            "name": "TransportsStorageConnectionsString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "EventHubConnectionString",
                            "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('eventHubNamespaceName'), variables('eventHubName'), variables('eventsListenerAuthorizationRule')), '2017-04-01').primaryConnectionString]"
                        },
                        {
                            "name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                            "value": "[parameters('otelProtocol')]"
                        },
                        {
                            "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                            "value": "[parameters('otelEndpoint')]"
                        },
                        {
                            "name": "OTEL_EXPORTER_OTLP_HEADERS",
                            "value": "[parameters('otelHeaders')]"
                        }
                    ]
                }
            }
        }, 
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "B1"
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "name": "[variables('webAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": ["[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"],
            "properties":{
                "httpsOnly": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "linuxFxVersion": "DOTNETCORE|8.0",
                    "appSettings": [
                        {
                            "name": "StatsReporter__FunctionHostKey",
                            "value": "[listKeys(concat(resourceId('Microsoft.Web/sites',  variables('functionAppName')), '/host/default'), '2018-11-01').functionKeys['default']]"
                        },
                        {
                            "name": "StatsReporter__FunctionHostUrl",
                            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).defaultHostName)]"
                        },
                        {
                            "name": "OTEL_EXPORTER_OTLP_PROTOCOL",
                            "value": "[parameters('otelProtocol')]"
                        },
                        {
                            "name": "OTEL_EXPORTER_OTLP_ENDPOINT",
                            "value": "[parameters('otelEndpoint')]"
                        },
                        {
                            "name": "OTEL_EXPORTER_OTLP_HEADERS",
                            "value": "[parameters('otelHeaders')]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "storageAccountConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
        },
        "functionsHostKey": {
            "type": "string",
            "value": "[listKeys(concat(resourceId('Microsoft.Web/sites',  variables('functionAppName')), '/host/default'), '2018-11-01').functionKeys['default']]"
        },
        "functionsHostUrl": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).defaultHostName)]"
        },
        "senderEventHubConnectionString": {
            "type": "string",
            "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('eventHubNamespaceName'), variables('eventHubName'), variables('eventsSenderAuthorizationRule')), '2017-04-01').primaryConnectionString]"
        }
    }
}
